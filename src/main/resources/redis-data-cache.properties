#-- Redis data-cache configuration

#- redis hosts ex: 127.0.0.1:6379, 127.0.0.2:6379, 127.0.0.2:6380, ....
redis.hosts=

#redis key 前缀
redis.key.prefix=团队名:项目名:
#- redis password
#redis.password=

#- set true to enable redis cluster mode (default value: false)
redis.cluster.enabled=true
#\u6700\u5927\u8fde\u63a5\u6570
redis.max.active=64
#\u6700\u5927\u7a7a\u95f2\u8fde\u63a5\u6570
redis.max.idle=10

redis.max.wait.millis=1000

#Redis Cluster\u6a21\u5f0f\u4e0b\uff0c\u8bbe\u7f6e\u4e3aTrue\uff0c\u6bcf\u6b21\u64cd\u4f5c\u591a\u8fdb\u884c\u4e00\u6b21PING\uff0c\u5f71\u54cd\u6027\u80fd
redis.test.onReturn=false
#Redis Cluster\u6a21\u5f0f\u4e0b\uff0c\u8bbe\u7f6e\u4e3aTrue\uff0c\u6bcf\u6b21\u64cd\u4f5c\u591a\u8fdb\u884c\u4e00\u6b21PING\uff0c\u5f71\u54cd\u6027\u80fd
redis.test.onBorrow=false

#- set true to enable redis sentinel mode (default value: false)
redis.sentinel.enabled=false
# redis sentinel master name (default value: mymaster)
redis.sentinel.master=mymaster

#- redis database (default value: 0)
#redis.database=0

#- redis connection timeout (default value: 2000 ms)
redis.timeout=3000

#- enable redis and standard session mode. (default value: false)
# If enabled,
#   1. Must be enabled sticky session in your load balancer configuration. Else this manager may not return the updated session values.
#   2. Session values are stored in local jvm and redis.
#   3. If redis is down/not responding, requests uses jvm stored session values to process user requests. Redis comes back the values will be synced.
lb.sticky-session.enabled=false
